/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SubmissionsImport } from './routes/submissions'
import { Route as SettingsImport } from './routes/settings'
import { Route as RulesImport } from './routes/rules'
import { Route as StreamsRouteImport } from './routes/streams/route'
import { Route as ScoresRouteImport } from './routes/scores/route'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as StreamsTwitchAccountImport } from './routes/streams/$twitchAccount'
import { Route as ScoresUniquesImport } from './routes/scores/uniques'
import { Route as ScoresRacesImport } from './routes/scores/races'
import { Route as ScoresLadderImport } from './routes/scores/ladder'
import { Route as ScoresHeistImport } from './routes/scores/heist'
import { Route as ScoresGemsImport } from './routes/scores/gems'
import { Route as ScoresForYouImport } from './routes/scores/for-you'
import { Route as ScoresDelveImport } from './routes/scores/delve'
import { Route as ScoresDailiesImport } from './routes/scores/dailies'
import { Route as ScoresCollectionsImport } from './routes/scores/collections'
import { Route as ScoresBountiesImport } from './routes/scores/bounties'
import { Route as ProfileUserIdImport } from './routes/profile.$userId'
import { Route as AdminUserManagementImport } from './routes/admin/user-management'
import { Route as AdminTeamSuggestionsImport } from './routes/admin/team-suggestions'
import { Route as AdminTeamSortImport } from './routes/admin/team-sort'
import { Route as AdminRecurringJobsImport } from './routes/admin/recurring-jobs'
import { Route as AdminEventsIndexImport } from './routes/admin/events/index'
import { Route as AuthTwitchCallbackImport } from './routes/auth/twitch.callback'
import { Route as AuthPoeCallbackImport } from './routes/auth/poe.callback'
import { Route as AuthDiscordCallbackImport } from './routes/auth/discord.callback'
import { Route as AdminEventsEventIdTeamsImport } from './routes/admin/events/$eventId/teams'
import { Route as AdminEventsEventIdScoringPresetsImport } from './routes/admin/events/$eventId/scoring-presets'
import { Route as AdminEventsEventIdCategoriesCategoryIdImport } from './routes/admin/events/$eventId/categories.$categoryId'

// Create/Update Routes

const SubmissionsRoute = SubmissionsImport.update({
  id: '/submissions',
  path: '/submissions',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const RulesRoute = RulesImport.update({
  id: '/rules',
  path: '/rules',
  getParentRoute: () => rootRoute,
} as any)

const StreamsRouteRoute = StreamsRouteImport.update({
  id: '/streams',
  path: '/streams',
  getParentRoute: () => rootRoute,
} as any)

const ScoresRouteRoute = ScoresRouteImport.update({
  id: '/scores',
  path: '/scores',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const StreamsTwitchAccountRoute = StreamsTwitchAccountImport.update({
  id: '/$twitchAccount',
  path: '/$twitchAccount',
  getParentRoute: () => StreamsRouteRoute,
} as any)

const ScoresUniquesRoute = ScoresUniquesImport.update({
  id: '/uniques',
  path: '/uniques',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresRacesRoute = ScoresRacesImport.update({
  id: '/races',
  path: '/races',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresLadderRoute = ScoresLadderImport.update({
  id: '/ladder',
  path: '/ladder',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresHeistRoute = ScoresHeistImport.update({
  id: '/heist',
  path: '/heist',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresGemsRoute = ScoresGemsImport.update({
  id: '/gems',
  path: '/gems',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresForYouRoute = ScoresForYouImport.update({
  id: '/for-you',
  path: '/for-you',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresDelveRoute = ScoresDelveImport.update({
  id: '/delve',
  path: '/delve',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresDailiesRoute = ScoresDailiesImport.update({
  id: '/dailies',
  path: '/dailies',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresCollectionsRoute = ScoresCollectionsImport.update({
  id: '/collections',
  path: '/collections',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ScoresBountiesRoute = ScoresBountiesImport.update({
  id: '/bounties',
  path: '/bounties',
  getParentRoute: () => ScoresRouteRoute,
} as any)

const ProfileUserIdRoute = ProfileUserIdImport.update({
  id: '/profile/$userId',
  path: '/profile/$userId',
  getParentRoute: () => rootRoute,
} as any)

const AdminUserManagementRoute = AdminUserManagementImport.update({
  id: '/admin/user-management',
  path: '/admin/user-management',
  getParentRoute: () => rootRoute,
} as any)

const AdminTeamSuggestionsRoute = AdminTeamSuggestionsImport.update({
  id: '/admin/team-suggestions',
  path: '/admin/team-suggestions',
  getParentRoute: () => rootRoute,
} as any)

const AdminTeamSortRoute = AdminTeamSortImport.update({
  id: '/admin/team-sort',
  path: '/admin/team-sort',
  getParentRoute: () => rootRoute,
} as any)

const AdminRecurringJobsRoute = AdminRecurringJobsImport.update({
  id: '/admin/recurring-jobs',
  path: '/admin/recurring-jobs',
  getParentRoute: () => rootRoute,
} as any)

const AdminEventsIndexRoute = AdminEventsIndexImport.update({
  id: '/admin/events/',
  path: '/admin/events/',
  getParentRoute: () => rootRoute,
} as any)

const AuthTwitchCallbackRoute = AuthTwitchCallbackImport.update({
  id: '/auth/twitch/callback',
  path: '/auth/twitch/callback',
  getParentRoute: () => rootRoute,
} as any)

const AuthPoeCallbackRoute = AuthPoeCallbackImport.update({
  id: '/auth/poe/callback',
  path: '/auth/poe/callback',
  getParentRoute: () => rootRoute,
} as any)

const AuthDiscordCallbackRoute = AuthDiscordCallbackImport.update({
  id: '/auth/discord/callback',
  path: '/auth/discord/callback',
  getParentRoute: () => rootRoute,
} as any)

const AdminEventsEventIdTeamsRoute = AdminEventsEventIdTeamsImport.update({
  id: '/admin/events/$eventId/teams',
  path: '/admin/events/$eventId/teams',
  getParentRoute: () => rootRoute,
} as any)

const AdminEventsEventIdScoringPresetsRoute =
  AdminEventsEventIdScoringPresetsImport.update({
    id: '/admin/events/$eventId/scoring-presets',
    path: '/admin/events/$eventId/scoring-presets',
    getParentRoute: () => rootRoute,
  } as any)

const AdminEventsEventIdCategoriesCategoryIdRoute =
  AdminEventsEventIdCategoriesCategoryIdImport.update({
    id: '/admin/events/$eventId/categories/$categoryId',
    path: '/admin/events/$eventId/categories/$categoryId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/scores': {
      id: '/scores'
      path: '/scores'
      fullPath: '/scores'
      preLoaderRoute: typeof ScoresRouteImport
      parentRoute: typeof rootRoute
    }
    '/streams': {
      id: '/streams'
      path: '/streams'
      fullPath: '/streams'
      preLoaderRoute: typeof StreamsRouteImport
      parentRoute: typeof rootRoute
    }
    '/rules': {
      id: '/rules'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof RulesImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/submissions': {
      id: '/submissions'
      path: '/submissions'
      fullPath: '/submissions'
      preLoaderRoute: typeof SubmissionsImport
      parentRoute: typeof rootRoute
    }
    '/admin/recurring-jobs': {
      id: '/admin/recurring-jobs'
      path: '/admin/recurring-jobs'
      fullPath: '/admin/recurring-jobs'
      preLoaderRoute: typeof AdminRecurringJobsImport
      parentRoute: typeof rootRoute
    }
    '/admin/team-sort': {
      id: '/admin/team-sort'
      path: '/admin/team-sort'
      fullPath: '/admin/team-sort'
      preLoaderRoute: typeof AdminTeamSortImport
      parentRoute: typeof rootRoute
    }
    '/admin/team-suggestions': {
      id: '/admin/team-suggestions'
      path: '/admin/team-suggestions'
      fullPath: '/admin/team-suggestions'
      preLoaderRoute: typeof AdminTeamSuggestionsImport
      parentRoute: typeof rootRoute
    }
    '/admin/user-management': {
      id: '/admin/user-management'
      path: '/admin/user-management'
      fullPath: '/admin/user-management'
      preLoaderRoute: typeof AdminUserManagementImport
      parentRoute: typeof rootRoute
    }
    '/profile/$userId': {
      id: '/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof ProfileUserIdImport
      parentRoute: typeof rootRoute
    }
    '/scores/bounties': {
      id: '/scores/bounties'
      path: '/bounties'
      fullPath: '/scores/bounties'
      preLoaderRoute: typeof ScoresBountiesImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/collections': {
      id: '/scores/collections'
      path: '/collections'
      fullPath: '/scores/collections'
      preLoaderRoute: typeof ScoresCollectionsImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/dailies': {
      id: '/scores/dailies'
      path: '/dailies'
      fullPath: '/scores/dailies'
      preLoaderRoute: typeof ScoresDailiesImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/delve': {
      id: '/scores/delve'
      path: '/delve'
      fullPath: '/scores/delve'
      preLoaderRoute: typeof ScoresDelveImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/for-you': {
      id: '/scores/for-you'
      path: '/for-you'
      fullPath: '/scores/for-you'
      preLoaderRoute: typeof ScoresForYouImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/gems': {
      id: '/scores/gems'
      path: '/gems'
      fullPath: '/scores/gems'
      preLoaderRoute: typeof ScoresGemsImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/heist': {
      id: '/scores/heist'
      path: '/heist'
      fullPath: '/scores/heist'
      preLoaderRoute: typeof ScoresHeistImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/ladder': {
      id: '/scores/ladder'
      path: '/ladder'
      fullPath: '/scores/ladder'
      preLoaderRoute: typeof ScoresLadderImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/races': {
      id: '/scores/races'
      path: '/races'
      fullPath: '/scores/races'
      preLoaderRoute: typeof ScoresRacesImport
      parentRoute: typeof ScoresRouteImport
    }
    '/scores/uniques': {
      id: '/scores/uniques'
      path: '/uniques'
      fullPath: '/scores/uniques'
      preLoaderRoute: typeof ScoresUniquesImport
      parentRoute: typeof ScoresRouteImport
    }
    '/streams/$twitchAccount': {
      id: '/streams/$twitchAccount'
      path: '/$twitchAccount'
      fullPath: '/streams/$twitchAccount'
      preLoaderRoute: typeof StreamsTwitchAccountImport
      parentRoute: typeof StreamsRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/discord/callback': {
      id: '/auth/discord/callback'
      path: '/auth/discord/callback'
      fullPath: '/auth/discord/callback'
      preLoaderRoute: typeof AuthDiscordCallbackImport
      parentRoute: typeof rootRoute
    }
    '/auth/poe/callback': {
      id: '/auth/poe/callback'
      path: '/auth/poe/callback'
      fullPath: '/auth/poe/callback'
      preLoaderRoute: typeof AuthPoeCallbackImport
      parentRoute: typeof rootRoute
    }
    '/auth/twitch/callback': {
      id: '/auth/twitch/callback'
      path: '/auth/twitch/callback'
      fullPath: '/auth/twitch/callback'
      preLoaderRoute: typeof AuthTwitchCallbackImport
      parentRoute: typeof rootRoute
    }
    '/admin/events/': {
      id: '/admin/events/'
      path: '/admin/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/events/$eventId/scoring-presets': {
      id: '/admin/events/$eventId/scoring-presets'
      path: '/admin/events/$eventId/scoring-presets'
      fullPath: '/admin/events/$eventId/scoring-presets'
      preLoaderRoute: typeof AdminEventsEventIdScoringPresetsImport
      parentRoute: typeof rootRoute
    }
    '/admin/events/$eventId/teams': {
      id: '/admin/events/$eventId/teams'
      path: '/admin/events/$eventId/teams'
      fullPath: '/admin/events/$eventId/teams'
      preLoaderRoute: typeof AdminEventsEventIdTeamsImport
      parentRoute: typeof rootRoute
    }
    '/admin/events/$eventId/categories/$categoryId': {
      id: '/admin/events/$eventId/categories/$categoryId'
      path: '/admin/events/$eventId/categories/$categoryId'
      fullPath: '/admin/events/$eventId/categories/$categoryId'
      preLoaderRoute: typeof AdminEventsEventIdCategoriesCategoryIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ScoresRouteRouteChildren {
  ScoresBountiesRoute: typeof ScoresBountiesRoute
  ScoresCollectionsRoute: typeof ScoresCollectionsRoute
  ScoresDailiesRoute: typeof ScoresDailiesRoute
  ScoresDelveRoute: typeof ScoresDelveRoute
  ScoresForYouRoute: typeof ScoresForYouRoute
  ScoresGemsRoute: typeof ScoresGemsRoute
  ScoresHeistRoute: typeof ScoresHeistRoute
  ScoresLadderRoute: typeof ScoresLadderRoute
  ScoresRacesRoute: typeof ScoresRacesRoute
  ScoresUniquesRoute: typeof ScoresUniquesRoute
}

const ScoresRouteRouteChildren: ScoresRouteRouteChildren = {
  ScoresBountiesRoute: ScoresBountiesRoute,
  ScoresCollectionsRoute: ScoresCollectionsRoute,
  ScoresDailiesRoute: ScoresDailiesRoute,
  ScoresDelveRoute: ScoresDelveRoute,
  ScoresForYouRoute: ScoresForYouRoute,
  ScoresGemsRoute: ScoresGemsRoute,
  ScoresHeistRoute: ScoresHeistRoute,
  ScoresLadderRoute: ScoresLadderRoute,
  ScoresRacesRoute: ScoresRacesRoute,
  ScoresUniquesRoute: ScoresUniquesRoute,
}

const ScoresRouteRouteWithChildren = ScoresRouteRoute._addFileChildren(
  ScoresRouteRouteChildren,
)

interface StreamsRouteRouteChildren {
  StreamsTwitchAccountRoute: typeof StreamsTwitchAccountRoute
}

const StreamsRouteRouteChildren: StreamsRouteRouteChildren = {
  StreamsTwitchAccountRoute: StreamsTwitchAccountRoute,
}

const StreamsRouteRouteWithChildren = StreamsRouteRoute._addFileChildren(
  StreamsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/scores': typeof ScoresRouteRouteWithChildren
  '/streams': typeof StreamsRouteRouteWithChildren
  '/rules': typeof RulesRoute
  '/settings': typeof SettingsRoute
  '/submissions': typeof SubmissionsRoute
  '/admin/recurring-jobs': typeof AdminRecurringJobsRoute
  '/admin/team-sort': typeof AdminTeamSortRoute
  '/admin/team-suggestions': typeof AdminTeamSuggestionsRoute
  '/admin/user-management': typeof AdminUserManagementRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/scores/bounties': typeof ScoresBountiesRoute
  '/scores/collections': typeof ScoresCollectionsRoute
  '/scores/dailies': typeof ScoresDailiesRoute
  '/scores/delve': typeof ScoresDelveRoute
  '/scores/for-you': typeof ScoresForYouRoute
  '/scores/gems': typeof ScoresGemsRoute
  '/scores/heist': typeof ScoresHeistRoute
  '/scores/ladder': typeof ScoresLadderRoute
  '/scores/races': typeof ScoresRacesRoute
  '/scores/uniques': typeof ScoresUniquesRoute
  '/streams/$twitchAccount': typeof StreamsTwitchAccountRoute
  '/admin': typeof AdminIndexRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
  '/auth/poe/callback': typeof AuthPoeCallbackRoute
  '/auth/twitch/callback': typeof AuthTwitchCallbackRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/events/$eventId/scoring-presets': typeof AdminEventsEventIdScoringPresetsRoute
  '/admin/events/$eventId/teams': typeof AdminEventsEventIdTeamsRoute
  '/admin/events/$eventId/categories/$categoryId': typeof AdminEventsEventIdCategoriesCategoryIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/scores': typeof ScoresRouteRouteWithChildren
  '/streams': typeof StreamsRouteRouteWithChildren
  '/rules': typeof RulesRoute
  '/settings': typeof SettingsRoute
  '/submissions': typeof SubmissionsRoute
  '/admin/recurring-jobs': typeof AdminRecurringJobsRoute
  '/admin/team-sort': typeof AdminTeamSortRoute
  '/admin/team-suggestions': typeof AdminTeamSuggestionsRoute
  '/admin/user-management': typeof AdminUserManagementRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/scores/bounties': typeof ScoresBountiesRoute
  '/scores/collections': typeof ScoresCollectionsRoute
  '/scores/dailies': typeof ScoresDailiesRoute
  '/scores/delve': typeof ScoresDelveRoute
  '/scores/for-you': typeof ScoresForYouRoute
  '/scores/gems': typeof ScoresGemsRoute
  '/scores/heist': typeof ScoresHeistRoute
  '/scores/ladder': typeof ScoresLadderRoute
  '/scores/races': typeof ScoresRacesRoute
  '/scores/uniques': typeof ScoresUniquesRoute
  '/streams/$twitchAccount': typeof StreamsTwitchAccountRoute
  '/admin': typeof AdminIndexRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
  '/auth/poe/callback': typeof AuthPoeCallbackRoute
  '/auth/twitch/callback': typeof AuthTwitchCallbackRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/events/$eventId/scoring-presets': typeof AdminEventsEventIdScoringPresetsRoute
  '/admin/events/$eventId/teams': typeof AdminEventsEventIdTeamsRoute
  '/admin/events/$eventId/categories/$categoryId': typeof AdminEventsEventIdCategoriesCategoryIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/scores': typeof ScoresRouteRouteWithChildren
  '/streams': typeof StreamsRouteRouteWithChildren
  '/rules': typeof RulesRoute
  '/settings': typeof SettingsRoute
  '/submissions': typeof SubmissionsRoute
  '/admin/recurring-jobs': typeof AdminRecurringJobsRoute
  '/admin/team-sort': typeof AdminTeamSortRoute
  '/admin/team-suggestions': typeof AdminTeamSuggestionsRoute
  '/admin/user-management': typeof AdminUserManagementRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/scores/bounties': typeof ScoresBountiesRoute
  '/scores/collections': typeof ScoresCollectionsRoute
  '/scores/dailies': typeof ScoresDailiesRoute
  '/scores/delve': typeof ScoresDelveRoute
  '/scores/for-you': typeof ScoresForYouRoute
  '/scores/gems': typeof ScoresGemsRoute
  '/scores/heist': typeof ScoresHeistRoute
  '/scores/ladder': typeof ScoresLadderRoute
  '/scores/races': typeof ScoresRacesRoute
  '/scores/uniques': typeof ScoresUniquesRoute
  '/streams/$twitchAccount': typeof StreamsTwitchAccountRoute
  '/admin/': typeof AdminIndexRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
  '/auth/poe/callback': typeof AuthPoeCallbackRoute
  '/auth/twitch/callback': typeof AuthTwitchCallbackRoute
  '/admin/events/': typeof AdminEventsIndexRoute
  '/admin/events/$eventId/scoring-presets': typeof AdminEventsEventIdScoringPresetsRoute
  '/admin/events/$eventId/teams': typeof AdminEventsEventIdTeamsRoute
  '/admin/events/$eventId/categories/$categoryId': typeof AdminEventsEventIdCategoriesCategoryIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/scores'
    | '/streams'
    | '/rules'
    | '/settings'
    | '/submissions'
    | '/admin/recurring-jobs'
    | '/admin/team-sort'
    | '/admin/team-suggestions'
    | '/admin/user-management'
    | '/profile/$userId'
    | '/scores/bounties'
    | '/scores/collections'
    | '/scores/dailies'
    | '/scores/delve'
    | '/scores/for-you'
    | '/scores/gems'
    | '/scores/heist'
    | '/scores/ladder'
    | '/scores/races'
    | '/scores/uniques'
    | '/streams/$twitchAccount'
    | '/admin'
    | '/auth/discord/callback'
    | '/auth/poe/callback'
    | '/auth/twitch/callback'
    | '/admin/events'
    | '/admin/events/$eventId/scoring-presets'
    | '/admin/events/$eventId/teams'
    | '/admin/events/$eventId/categories/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/scores'
    | '/streams'
    | '/rules'
    | '/settings'
    | '/submissions'
    | '/admin/recurring-jobs'
    | '/admin/team-sort'
    | '/admin/team-suggestions'
    | '/admin/user-management'
    | '/profile/$userId'
    | '/scores/bounties'
    | '/scores/collections'
    | '/scores/dailies'
    | '/scores/delve'
    | '/scores/for-you'
    | '/scores/gems'
    | '/scores/heist'
    | '/scores/ladder'
    | '/scores/races'
    | '/scores/uniques'
    | '/streams/$twitchAccount'
    | '/admin'
    | '/auth/discord/callback'
    | '/auth/poe/callback'
    | '/auth/twitch/callback'
    | '/admin/events'
    | '/admin/events/$eventId/scoring-presets'
    | '/admin/events/$eventId/teams'
    | '/admin/events/$eventId/categories/$categoryId'
  id:
    | '__root__'
    | '/'
    | '/scores'
    | '/streams'
    | '/rules'
    | '/settings'
    | '/submissions'
    | '/admin/recurring-jobs'
    | '/admin/team-sort'
    | '/admin/team-suggestions'
    | '/admin/user-management'
    | '/profile/$userId'
    | '/scores/bounties'
    | '/scores/collections'
    | '/scores/dailies'
    | '/scores/delve'
    | '/scores/for-you'
    | '/scores/gems'
    | '/scores/heist'
    | '/scores/ladder'
    | '/scores/races'
    | '/scores/uniques'
    | '/streams/$twitchAccount'
    | '/admin/'
    | '/auth/discord/callback'
    | '/auth/poe/callback'
    | '/auth/twitch/callback'
    | '/admin/events/'
    | '/admin/events/$eventId/scoring-presets'
    | '/admin/events/$eventId/teams'
    | '/admin/events/$eventId/categories/$categoryId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ScoresRouteRoute: typeof ScoresRouteRouteWithChildren
  StreamsRouteRoute: typeof StreamsRouteRouteWithChildren
  RulesRoute: typeof RulesRoute
  SettingsRoute: typeof SettingsRoute
  SubmissionsRoute: typeof SubmissionsRoute
  AdminRecurringJobsRoute: typeof AdminRecurringJobsRoute
  AdminTeamSortRoute: typeof AdminTeamSortRoute
  AdminTeamSuggestionsRoute: typeof AdminTeamSuggestionsRoute
  AdminUserManagementRoute: typeof AdminUserManagementRoute
  ProfileUserIdRoute: typeof ProfileUserIdRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AuthDiscordCallbackRoute: typeof AuthDiscordCallbackRoute
  AuthPoeCallbackRoute: typeof AuthPoeCallbackRoute
  AuthTwitchCallbackRoute: typeof AuthTwitchCallbackRoute
  AdminEventsIndexRoute: typeof AdminEventsIndexRoute
  AdminEventsEventIdScoringPresetsRoute: typeof AdminEventsEventIdScoringPresetsRoute
  AdminEventsEventIdTeamsRoute: typeof AdminEventsEventIdTeamsRoute
  AdminEventsEventIdCategoriesCategoryIdRoute: typeof AdminEventsEventIdCategoriesCategoryIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ScoresRouteRoute: ScoresRouteRouteWithChildren,
  StreamsRouteRoute: StreamsRouteRouteWithChildren,
  RulesRoute: RulesRoute,
  SettingsRoute: SettingsRoute,
  SubmissionsRoute: SubmissionsRoute,
  AdminRecurringJobsRoute: AdminRecurringJobsRoute,
  AdminTeamSortRoute: AdminTeamSortRoute,
  AdminTeamSuggestionsRoute: AdminTeamSuggestionsRoute,
  AdminUserManagementRoute: AdminUserManagementRoute,
  ProfileUserIdRoute: ProfileUserIdRoute,
  AdminIndexRoute: AdminIndexRoute,
  AuthDiscordCallbackRoute: AuthDiscordCallbackRoute,
  AuthPoeCallbackRoute: AuthPoeCallbackRoute,
  AuthTwitchCallbackRoute: AuthTwitchCallbackRoute,
  AdminEventsIndexRoute: AdminEventsIndexRoute,
  AdminEventsEventIdScoringPresetsRoute: AdminEventsEventIdScoringPresetsRoute,
  AdminEventsEventIdTeamsRoute: AdminEventsEventIdTeamsRoute,
  AdminEventsEventIdCategoriesCategoryIdRoute:
    AdminEventsEventIdCategoriesCategoryIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/scores",
        "/streams",
        "/rules",
        "/settings",
        "/submissions",
        "/admin/recurring-jobs",
        "/admin/team-sort",
        "/admin/team-suggestions",
        "/admin/user-management",
        "/profile/$userId",
        "/admin/",
        "/auth/discord/callback",
        "/auth/poe/callback",
        "/auth/twitch/callback",
        "/admin/events/",
        "/admin/events/$eventId/scoring-presets",
        "/admin/events/$eventId/teams",
        "/admin/events/$eventId/categories/$categoryId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/scores": {
      "filePath": "scores/route.tsx",
      "children": [
        "/scores/bounties",
        "/scores/collections",
        "/scores/dailies",
        "/scores/delve",
        "/scores/for-you",
        "/scores/gems",
        "/scores/heist",
        "/scores/ladder",
        "/scores/races",
        "/scores/uniques"
      ]
    },
    "/streams": {
      "filePath": "streams/route.tsx",
      "children": [
        "/streams/$twitchAccount"
      ]
    },
    "/rules": {
      "filePath": "rules.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/submissions": {
      "filePath": "submissions.tsx"
    },
    "/admin/recurring-jobs": {
      "filePath": "admin/recurring-jobs.tsx"
    },
    "/admin/team-sort": {
      "filePath": "admin/team-sort.tsx"
    },
    "/admin/team-suggestions": {
      "filePath": "admin/team-suggestions.tsx"
    },
    "/admin/user-management": {
      "filePath": "admin/user-management.tsx"
    },
    "/profile/$userId": {
      "filePath": "profile.$userId.tsx"
    },
    "/scores/bounties": {
      "filePath": "scores/bounties.tsx",
      "parent": "/scores"
    },
    "/scores/collections": {
      "filePath": "scores/collections.tsx",
      "parent": "/scores"
    },
    "/scores/dailies": {
      "filePath": "scores/dailies.tsx",
      "parent": "/scores"
    },
    "/scores/delve": {
      "filePath": "scores/delve.tsx",
      "parent": "/scores"
    },
    "/scores/for-you": {
      "filePath": "scores/for-you.tsx",
      "parent": "/scores"
    },
    "/scores/gems": {
      "filePath": "scores/gems.tsx",
      "parent": "/scores"
    },
    "/scores/heist": {
      "filePath": "scores/heist.tsx",
      "parent": "/scores"
    },
    "/scores/ladder": {
      "filePath": "scores/ladder.tsx",
      "parent": "/scores"
    },
    "/scores/races": {
      "filePath": "scores/races.tsx",
      "parent": "/scores"
    },
    "/scores/uniques": {
      "filePath": "scores/uniques.tsx",
      "parent": "/scores"
    },
    "/streams/$twitchAccount": {
      "filePath": "streams/$twitchAccount.tsx",
      "parent": "/streams"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/auth/discord/callback": {
      "filePath": "auth/discord.callback.tsx"
    },
    "/auth/poe/callback": {
      "filePath": "auth/poe.callback.tsx"
    },
    "/auth/twitch/callback": {
      "filePath": "auth/twitch.callback.tsx"
    },
    "/admin/events/": {
      "filePath": "admin/events/index.tsx"
    },
    "/admin/events/$eventId/scoring-presets": {
      "filePath": "admin/events/$eventId/scoring-presets.tsx"
    },
    "/admin/events/$eventId/teams": {
      "filePath": "admin/events/$eventId/teams.tsx"
    },
    "/admin/events/$eventId/categories/$categoryId": {
      "filePath": "admin/events/$eventId/categories.$categoryId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
