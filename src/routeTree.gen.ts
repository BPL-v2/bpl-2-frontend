/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SubmissionsRouteImport } from './routes/submissions'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as RulesRouteImport } from './routes/rules'
import { Route as PlayedRouteImport } from './routes/played'
import { Route as StreamsRouteRouteImport } from './routes/streams/route'
import { Route as ScoresRouteRouteImport } from './routes/scores/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as StreamsTwitchAccountRouteImport } from './routes/streams/$twitchAccount'
import { Route as ScoresUniquesRouteImport } from './routes/scores/uniques'
import { Route as ScoresRacesRouteImport } from './routes/scores/races'
import { Route as ScoresProgressRouteImport } from './routes/scores/progress'
import { Route as ScoresLadderRouteImport } from './routes/scores/ladder'
import { Route as ScoresHeistRouteImport } from './routes/scores/heist'
import { Route as ScoresGemsRouteImport } from './routes/scores/gems'
import { Route as ScoresForYouRouteImport } from './routes/scores/for-you'
import { Route as ScoresDelveRouteImport } from './routes/scores/delve'
import { Route as ScoresDailiesRouteImport } from './routes/scores/dailies'
import { Route as ScoresCollectionsRouteImport } from './routes/scores/collections'
import { Route as ScoresBountiesRouteImport } from './routes/scores/bounties'
import { Route as AdminUserManagementRouteImport } from './routes/admin/user-management'
import { Route as AdminTeamSuggestionsRouteImport } from './routes/admin/team-suggestions'
import { Route as AdminTeamSortRouteImport } from './routes/admin/team-sort'
import { Route as AdminSubmissionsRouteImport } from './routes/admin/submissions'
import { Route as AdminRecurringJobsRouteImport } from './routes/admin/recurring-jobs'
import { Route as ProfileUserIdRouteRouteImport } from './routes/profile/$userId/route'
import { Route as AdminGuildStashesRouteRouteImport } from './routes/admin/guild-stashes/route'
import { Route as AdminEventsIndexRouteImport } from './routes/admin/events/index'
import { Route as AuthTwitchCallbackRouteImport } from './routes/auth/twitch.callback'
import { Route as AuthPoeCallbackRouteImport } from './routes/auth/poe.callback'
import { Route as AuthDiscordCallbackRouteImport } from './routes/auth/discord.callback'
import { Route as AdminGuildStashesStashIdRouteImport } from './routes/admin/guild-stashes/$stashId'
import { Route as ProfileUserIdEventIdCharacterIdRouteImport } from './routes/profile/$userId/$eventId.$characterId'
import { Route as AdminEventsEventIdTeamsRouteImport } from './routes/admin/events/$eventId/teams'
import { Route as AdminEventsEventIdScoringPresetsRouteImport } from './routes/admin/events/$eventId/scoring-presets'
import { Route as AdminEventsEventIdCategoriesCategoryIdRouteImport } from './routes/admin/events/$eventId/categories.$categoryId'

const SubmissionsRoute = SubmissionsRouteImport.update({
  id: '/submissions',
  path: '/submissions',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const RulesRoute = RulesRouteImport.update({
  id: '/rules',
  path: '/rules',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayedRoute = PlayedRouteImport.update({
  id: '/played',
  path: '/played',
  getParentRoute: () => rootRouteImport,
} as any)
const StreamsRouteRoute = StreamsRouteRouteImport.update({
  id: '/streams',
  path: '/streams',
  getParentRoute: () => rootRouteImport,
} as any)
const ScoresRouteRoute = ScoresRouteRouteImport.update({
  id: '/scores',
  path: '/scores',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const StreamsTwitchAccountRoute = StreamsTwitchAccountRouteImport.update({
  id: '/$twitchAccount',
  path: '/$twitchAccount',
  getParentRoute: () => StreamsRouteRoute,
} as any)
const ScoresUniquesRoute = ScoresUniquesRouteImport.update({
  id: '/uniques',
  path: '/uniques',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresRacesRoute = ScoresRacesRouteImport.update({
  id: '/races',
  path: '/races',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresProgressRoute = ScoresProgressRouteImport.update({
  id: '/progress',
  path: '/progress',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresLadderRoute = ScoresLadderRouteImport.update({
  id: '/ladder',
  path: '/ladder',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresHeistRoute = ScoresHeistRouteImport.update({
  id: '/heist',
  path: '/heist',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresGemsRoute = ScoresGemsRouteImport.update({
  id: '/gems',
  path: '/gems',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresForYouRoute = ScoresForYouRouteImport.update({
  id: '/for-you',
  path: '/for-you',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresDelveRoute = ScoresDelveRouteImport.update({
  id: '/delve',
  path: '/delve',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresDailiesRoute = ScoresDailiesRouteImport.update({
  id: '/dailies',
  path: '/dailies',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresCollectionsRoute = ScoresCollectionsRouteImport.update({
  id: '/collections',
  path: '/collections',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const ScoresBountiesRoute = ScoresBountiesRouteImport.update({
  id: '/bounties',
  path: '/bounties',
  getParentRoute: () => ScoresRouteRoute,
} as any)
const AdminUserManagementRoute = AdminUserManagementRouteImport.update({
  id: '/admin/user-management',
  path: '/admin/user-management',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminTeamSuggestionsRoute = AdminTeamSuggestionsRouteImport.update({
  id: '/admin/team-suggestions',
  path: '/admin/team-suggestions',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminTeamSortRoute = AdminTeamSortRouteImport.update({
  id: '/admin/team-sort',
  path: '/admin/team-sort',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSubmissionsRoute = AdminSubmissionsRouteImport.update({
  id: '/admin/submissions',
  path: '/admin/submissions',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRecurringJobsRoute = AdminRecurringJobsRouteImport.update({
  id: '/admin/recurring-jobs',
  path: '/admin/recurring-jobs',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileUserIdRouteRoute = ProfileUserIdRouteRouteImport.update({
  id: '/profile/$userId',
  path: '/profile/$userId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminGuildStashesRouteRoute = AdminGuildStashesRouteRouteImport.update({
  id: '/admin/guild-stashes',
  path: '/admin/guild-stashes',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminEventsIndexRoute = AdminEventsIndexRouteImport.update({
  id: '/admin/events/',
  path: '/admin/events/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthTwitchCallbackRoute = AuthTwitchCallbackRouteImport.update({
  id: '/auth/twitch/callback',
  path: '/auth/twitch/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPoeCallbackRoute = AuthPoeCallbackRouteImport.update({
  id: '/auth/poe/callback',
  path: '/auth/poe/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDiscordCallbackRoute = AuthDiscordCallbackRouteImport.update({
  id: '/auth/discord/callback',
  path: '/auth/discord/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminGuildStashesStashIdRoute =
  AdminGuildStashesStashIdRouteImport.update({
    id: '/$stashId',
    path: '/$stashId',
    getParentRoute: () => AdminGuildStashesRouteRoute,
  } as any)
const ProfileUserIdEventIdCharacterIdRoute =
  ProfileUserIdEventIdCharacterIdRouteImport.update({
    id: '/$eventId/$characterId',
    path: '/$eventId/$characterId',
    getParentRoute: () => ProfileUserIdRouteRoute,
  } as any)
const AdminEventsEventIdTeamsRoute = AdminEventsEventIdTeamsRouteImport.update({
  id: '/admin/events/$eventId/teams',
  path: '/admin/events/$eventId/teams',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminEventsEventIdScoringPresetsRoute =
  AdminEventsEventIdScoringPresetsRouteImport.update({
    id: '/admin/events/$eventId/scoring-presets',
    path: '/admin/events/$eventId/scoring-presets',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminEventsEventIdCategoriesCategoryIdRoute =
  AdminEventsEventIdCategoriesCategoryIdRouteImport.update({
    id: '/admin/events/$eventId/categories/$categoryId',
    path: '/admin/events/$eventId/categories/$categoryId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/scores': typeof ScoresRouteRouteWithChildren
  '/streams': typeof StreamsRouteRouteWithChildren
  '/played': typeof PlayedRoute
  '/rules': typeof RulesRoute
  '/settings': typeof SettingsRoute
  '/submissions': typeof SubmissionsRoute
  '/admin/guild-stashes': typeof AdminGuildStashesRouteRouteWithChildren
  '/profile/$userId': typeof ProfileUserIdRouteRouteWithChildren
  '/admin/recurring-jobs': typeof AdminRecurringJobsRoute
  '/admin/submissions': typeof AdminSubmissionsRoute
  '/admin/team-sort': typeof AdminTeamSortRoute
  '/admin/team-suggestions': typeof AdminTeamSuggestionsRoute
  '/admin/user-management': typeof AdminUserManagementRoute
  '/scores/bounties': typeof ScoresBountiesRoute
  '/scores/collections': typeof ScoresCollectionsRoute
  '/scores/dailies': typeof ScoresDailiesRoute
  '/scores/delve': typeof ScoresDelveRoute
  '/scores/for-you': typeof ScoresForYouRoute
  '/scores/gems': typeof ScoresGemsRoute
  '/scores/heist': typeof ScoresHeistRoute
  '/scores/ladder': typeof ScoresLadderRoute
  '/scores/progress': typeof ScoresProgressRoute
  '/scores/races': typeof ScoresRacesRoute
  '/scores/uniques': typeof ScoresUniquesRoute
  '/streams/$twitchAccount': typeof StreamsTwitchAccountRoute
  '/admin': typeof AdminIndexRoute
  '/admin/guild-stashes/$stashId': typeof AdminGuildStashesStashIdRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
  '/auth/poe/callback': typeof AuthPoeCallbackRoute
  '/auth/twitch/callback': typeof AuthTwitchCallbackRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/events/$eventId/scoring-presets': typeof AdminEventsEventIdScoringPresetsRoute
  '/admin/events/$eventId/teams': typeof AdminEventsEventIdTeamsRoute
  '/profile/$userId/$eventId/$characterId': typeof ProfileUserIdEventIdCharacterIdRoute
  '/admin/events/$eventId/categories/$categoryId': typeof AdminEventsEventIdCategoriesCategoryIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/scores': typeof ScoresRouteRouteWithChildren
  '/streams': typeof StreamsRouteRouteWithChildren
  '/played': typeof PlayedRoute
  '/rules': typeof RulesRoute
  '/settings': typeof SettingsRoute
  '/submissions': typeof SubmissionsRoute
  '/admin/guild-stashes': typeof AdminGuildStashesRouteRouteWithChildren
  '/profile/$userId': typeof ProfileUserIdRouteRouteWithChildren
  '/admin/recurring-jobs': typeof AdminRecurringJobsRoute
  '/admin/submissions': typeof AdminSubmissionsRoute
  '/admin/team-sort': typeof AdminTeamSortRoute
  '/admin/team-suggestions': typeof AdminTeamSuggestionsRoute
  '/admin/user-management': typeof AdminUserManagementRoute
  '/scores/bounties': typeof ScoresBountiesRoute
  '/scores/collections': typeof ScoresCollectionsRoute
  '/scores/dailies': typeof ScoresDailiesRoute
  '/scores/delve': typeof ScoresDelveRoute
  '/scores/for-you': typeof ScoresForYouRoute
  '/scores/gems': typeof ScoresGemsRoute
  '/scores/heist': typeof ScoresHeistRoute
  '/scores/ladder': typeof ScoresLadderRoute
  '/scores/progress': typeof ScoresProgressRoute
  '/scores/races': typeof ScoresRacesRoute
  '/scores/uniques': typeof ScoresUniquesRoute
  '/streams/$twitchAccount': typeof StreamsTwitchAccountRoute
  '/admin': typeof AdminIndexRoute
  '/admin/guild-stashes/$stashId': typeof AdminGuildStashesStashIdRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
  '/auth/poe/callback': typeof AuthPoeCallbackRoute
  '/auth/twitch/callback': typeof AuthTwitchCallbackRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/events/$eventId/scoring-presets': typeof AdminEventsEventIdScoringPresetsRoute
  '/admin/events/$eventId/teams': typeof AdminEventsEventIdTeamsRoute
  '/profile/$userId/$eventId/$characterId': typeof ProfileUserIdEventIdCharacterIdRoute
  '/admin/events/$eventId/categories/$categoryId': typeof AdminEventsEventIdCategoriesCategoryIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/scores': typeof ScoresRouteRouteWithChildren
  '/streams': typeof StreamsRouteRouteWithChildren
  '/played': typeof PlayedRoute
  '/rules': typeof RulesRoute
  '/settings': typeof SettingsRoute
  '/submissions': typeof SubmissionsRoute
  '/admin/guild-stashes': typeof AdminGuildStashesRouteRouteWithChildren
  '/profile/$userId': typeof ProfileUserIdRouteRouteWithChildren
  '/admin/recurring-jobs': typeof AdminRecurringJobsRoute
  '/admin/submissions': typeof AdminSubmissionsRoute
  '/admin/team-sort': typeof AdminTeamSortRoute
  '/admin/team-suggestions': typeof AdminTeamSuggestionsRoute
  '/admin/user-management': typeof AdminUserManagementRoute
  '/scores/bounties': typeof ScoresBountiesRoute
  '/scores/collections': typeof ScoresCollectionsRoute
  '/scores/dailies': typeof ScoresDailiesRoute
  '/scores/delve': typeof ScoresDelveRoute
  '/scores/for-you': typeof ScoresForYouRoute
  '/scores/gems': typeof ScoresGemsRoute
  '/scores/heist': typeof ScoresHeistRoute
  '/scores/ladder': typeof ScoresLadderRoute
  '/scores/progress': typeof ScoresProgressRoute
  '/scores/races': typeof ScoresRacesRoute
  '/scores/uniques': typeof ScoresUniquesRoute
  '/streams/$twitchAccount': typeof StreamsTwitchAccountRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/guild-stashes/$stashId': typeof AdminGuildStashesStashIdRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
  '/auth/poe/callback': typeof AuthPoeCallbackRoute
  '/auth/twitch/callback': typeof AuthTwitchCallbackRoute
  '/admin/events/': typeof AdminEventsIndexRoute
  '/admin/events/$eventId/scoring-presets': typeof AdminEventsEventIdScoringPresetsRoute
  '/admin/events/$eventId/teams': typeof AdminEventsEventIdTeamsRoute
  '/profile/$userId/$eventId/$characterId': typeof ProfileUserIdEventIdCharacterIdRoute
  '/admin/events/$eventId/categories/$categoryId': typeof AdminEventsEventIdCategoriesCategoryIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/scores'
    | '/streams'
    | '/played'
    | '/rules'
    | '/settings'
    | '/submissions'
    | '/admin/guild-stashes'
    | '/profile/$userId'
    | '/admin/recurring-jobs'
    | '/admin/submissions'
    | '/admin/team-sort'
    | '/admin/team-suggestions'
    | '/admin/user-management'
    | '/scores/bounties'
    | '/scores/collections'
    | '/scores/dailies'
    | '/scores/delve'
    | '/scores/for-you'
    | '/scores/gems'
    | '/scores/heist'
    | '/scores/ladder'
    | '/scores/progress'
    | '/scores/races'
    | '/scores/uniques'
    | '/streams/$twitchAccount'
    | '/admin'
    | '/admin/guild-stashes/$stashId'
    | '/auth/discord/callback'
    | '/auth/poe/callback'
    | '/auth/twitch/callback'
    | '/admin/events'
    | '/admin/events/$eventId/scoring-presets'
    | '/admin/events/$eventId/teams'
    | '/profile/$userId/$eventId/$characterId'
    | '/admin/events/$eventId/categories/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/scores'
    | '/streams'
    | '/played'
    | '/rules'
    | '/settings'
    | '/submissions'
    | '/admin/guild-stashes'
    | '/profile/$userId'
    | '/admin/recurring-jobs'
    | '/admin/submissions'
    | '/admin/team-sort'
    | '/admin/team-suggestions'
    | '/admin/user-management'
    | '/scores/bounties'
    | '/scores/collections'
    | '/scores/dailies'
    | '/scores/delve'
    | '/scores/for-you'
    | '/scores/gems'
    | '/scores/heist'
    | '/scores/ladder'
    | '/scores/progress'
    | '/scores/races'
    | '/scores/uniques'
    | '/streams/$twitchAccount'
    | '/admin'
    | '/admin/guild-stashes/$stashId'
    | '/auth/discord/callback'
    | '/auth/poe/callback'
    | '/auth/twitch/callback'
    | '/admin/events'
    | '/admin/events/$eventId/scoring-presets'
    | '/admin/events/$eventId/teams'
    | '/profile/$userId/$eventId/$characterId'
    | '/admin/events/$eventId/categories/$categoryId'
  id:
    | '__root__'
    | '/'
    | '/scores'
    | '/streams'
    | '/played'
    | '/rules'
    | '/settings'
    | '/submissions'
    | '/admin/guild-stashes'
    | '/profile/$userId'
    | '/admin/recurring-jobs'
    | '/admin/submissions'
    | '/admin/team-sort'
    | '/admin/team-suggestions'
    | '/admin/user-management'
    | '/scores/bounties'
    | '/scores/collections'
    | '/scores/dailies'
    | '/scores/delve'
    | '/scores/for-you'
    | '/scores/gems'
    | '/scores/heist'
    | '/scores/ladder'
    | '/scores/progress'
    | '/scores/races'
    | '/scores/uniques'
    | '/streams/$twitchAccount'
    | '/admin/'
    | '/admin/guild-stashes/$stashId'
    | '/auth/discord/callback'
    | '/auth/poe/callback'
    | '/auth/twitch/callback'
    | '/admin/events/'
    | '/admin/events/$eventId/scoring-presets'
    | '/admin/events/$eventId/teams'
    | '/profile/$userId/$eventId/$characterId'
    | '/admin/events/$eventId/categories/$categoryId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ScoresRouteRoute: typeof ScoresRouteRouteWithChildren
  StreamsRouteRoute: typeof StreamsRouteRouteWithChildren
  PlayedRoute: typeof PlayedRoute
  RulesRoute: typeof RulesRoute
  SettingsRoute: typeof SettingsRoute
  SubmissionsRoute: typeof SubmissionsRoute
  AdminGuildStashesRouteRoute: typeof AdminGuildStashesRouteRouteWithChildren
  ProfileUserIdRouteRoute: typeof ProfileUserIdRouteRouteWithChildren
  AdminRecurringJobsRoute: typeof AdminRecurringJobsRoute
  AdminSubmissionsRoute: typeof AdminSubmissionsRoute
  AdminTeamSortRoute: typeof AdminTeamSortRoute
  AdminTeamSuggestionsRoute: typeof AdminTeamSuggestionsRoute
  AdminUserManagementRoute: typeof AdminUserManagementRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AuthDiscordCallbackRoute: typeof AuthDiscordCallbackRoute
  AuthPoeCallbackRoute: typeof AuthPoeCallbackRoute
  AuthTwitchCallbackRoute: typeof AuthTwitchCallbackRoute
  AdminEventsIndexRoute: typeof AdminEventsIndexRoute
  AdminEventsEventIdScoringPresetsRoute: typeof AdminEventsEventIdScoringPresetsRoute
  AdminEventsEventIdTeamsRoute: typeof AdminEventsEventIdTeamsRoute
  AdminEventsEventIdCategoriesCategoryIdRoute: typeof AdminEventsEventIdCategoriesCategoryIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/submissions': {
      id: '/submissions'
      path: '/submissions'
      fullPath: '/submissions'
      preLoaderRoute: typeof SubmissionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rules': {
      id: '/rules'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof RulesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/played': {
      id: '/played'
      path: '/played'
      fullPath: '/played'
      preLoaderRoute: typeof PlayedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/streams': {
      id: '/streams'
      path: '/streams'
      fullPath: '/streams'
      preLoaderRoute: typeof StreamsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/scores': {
      id: '/scores'
      path: '/scores'
      fullPath: '/scores'
      preLoaderRoute: typeof ScoresRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/streams/$twitchAccount': {
      id: '/streams/$twitchAccount'
      path: '/$twitchAccount'
      fullPath: '/streams/$twitchAccount'
      preLoaderRoute: typeof StreamsTwitchAccountRouteImport
      parentRoute: typeof StreamsRouteRoute
    }
    '/scores/uniques': {
      id: '/scores/uniques'
      path: '/uniques'
      fullPath: '/scores/uniques'
      preLoaderRoute: typeof ScoresUniquesRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/races': {
      id: '/scores/races'
      path: '/races'
      fullPath: '/scores/races'
      preLoaderRoute: typeof ScoresRacesRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/progress': {
      id: '/scores/progress'
      path: '/progress'
      fullPath: '/scores/progress'
      preLoaderRoute: typeof ScoresProgressRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/ladder': {
      id: '/scores/ladder'
      path: '/ladder'
      fullPath: '/scores/ladder'
      preLoaderRoute: typeof ScoresLadderRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/heist': {
      id: '/scores/heist'
      path: '/heist'
      fullPath: '/scores/heist'
      preLoaderRoute: typeof ScoresHeistRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/gems': {
      id: '/scores/gems'
      path: '/gems'
      fullPath: '/scores/gems'
      preLoaderRoute: typeof ScoresGemsRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/for-you': {
      id: '/scores/for-you'
      path: '/for-you'
      fullPath: '/scores/for-you'
      preLoaderRoute: typeof ScoresForYouRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/delve': {
      id: '/scores/delve'
      path: '/delve'
      fullPath: '/scores/delve'
      preLoaderRoute: typeof ScoresDelveRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/dailies': {
      id: '/scores/dailies'
      path: '/dailies'
      fullPath: '/scores/dailies'
      preLoaderRoute: typeof ScoresDailiesRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/collections': {
      id: '/scores/collections'
      path: '/collections'
      fullPath: '/scores/collections'
      preLoaderRoute: typeof ScoresCollectionsRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/scores/bounties': {
      id: '/scores/bounties'
      path: '/bounties'
      fullPath: '/scores/bounties'
      preLoaderRoute: typeof ScoresBountiesRouteImport
      parentRoute: typeof ScoresRouteRoute
    }
    '/admin/user-management': {
      id: '/admin/user-management'
      path: '/admin/user-management'
      fullPath: '/admin/user-management'
      preLoaderRoute: typeof AdminUserManagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/team-suggestions': {
      id: '/admin/team-suggestions'
      path: '/admin/team-suggestions'
      fullPath: '/admin/team-suggestions'
      preLoaderRoute: typeof AdminTeamSuggestionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/team-sort': {
      id: '/admin/team-sort'
      path: '/admin/team-sort'
      fullPath: '/admin/team-sort'
      preLoaderRoute: typeof AdminTeamSortRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/submissions': {
      id: '/admin/submissions'
      path: '/admin/submissions'
      fullPath: '/admin/submissions'
      preLoaderRoute: typeof AdminSubmissionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/recurring-jobs': {
      id: '/admin/recurring-jobs'
      path: '/admin/recurring-jobs'
      fullPath: '/admin/recurring-jobs'
      preLoaderRoute: typeof AdminRecurringJobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$userId': {
      id: '/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof ProfileUserIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/guild-stashes': {
      id: '/admin/guild-stashes'
      path: '/admin/guild-stashes'
      fullPath: '/admin/guild-stashes'
      preLoaderRoute: typeof AdminGuildStashesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/events/': {
      id: '/admin/events/'
      path: '/admin/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/twitch/callback': {
      id: '/auth/twitch/callback'
      path: '/auth/twitch/callback'
      fullPath: '/auth/twitch/callback'
      preLoaderRoute: typeof AuthTwitchCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/poe/callback': {
      id: '/auth/poe/callback'
      path: '/auth/poe/callback'
      fullPath: '/auth/poe/callback'
      preLoaderRoute: typeof AuthPoeCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/discord/callback': {
      id: '/auth/discord/callback'
      path: '/auth/discord/callback'
      fullPath: '/auth/discord/callback'
      preLoaderRoute: typeof AuthDiscordCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/guild-stashes/$stashId': {
      id: '/admin/guild-stashes/$stashId'
      path: '/$stashId'
      fullPath: '/admin/guild-stashes/$stashId'
      preLoaderRoute: typeof AdminGuildStashesStashIdRouteImport
      parentRoute: typeof AdminGuildStashesRouteRoute
    }
    '/profile/$userId/$eventId/$characterId': {
      id: '/profile/$userId/$eventId/$characterId'
      path: '/$eventId/$characterId'
      fullPath: '/profile/$userId/$eventId/$characterId'
      preLoaderRoute: typeof ProfileUserIdEventIdCharacterIdRouteImport
      parentRoute: typeof ProfileUserIdRouteRoute
    }
    '/admin/events/$eventId/teams': {
      id: '/admin/events/$eventId/teams'
      path: '/admin/events/$eventId/teams'
      fullPath: '/admin/events/$eventId/teams'
      preLoaderRoute: typeof AdminEventsEventIdTeamsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/events/$eventId/scoring-presets': {
      id: '/admin/events/$eventId/scoring-presets'
      path: '/admin/events/$eventId/scoring-presets'
      fullPath: '/admin/events/$eventId/scoring-presets'
      preLoaderRoute: typeof AdminEventsEventIdScoringPresetsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/events/$eventId/categories/$categoryId': {
      id: '/admin/events/$eventId/categories/$categoryId'
      path: '/admin/events/$eventId/categories/$categoryId'
      fullPath: '/admin/events/$eventId/categories/$categoryId'
      preLoaderRoute: typeof AdminEventsEventIdCategoriesCategoryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface ScoresRouteRouteChildren {
  ScoresBountiesRoute: typeof ScoresBountiesRoute
  ScoresCollectionsRoute: typeof ScoresCollectionsRoute
  ScoresDailiesRoute: typeof ScoresDailiesRoute
  ScoresDelveRoute: typeof ScoresDelveRoute
  ScoresForYouRoute: typeof ScoresForYouRoute
  ScoresGemsRoute: typeof ScoresGemsRoute
  ScoresHeistRoute: typeof ScoresHeistRoute
  ScoresLadderRoute: typeof ScoresLadderRoute
  ScoresProgressRoute: typeof ScoresProgressRoute
  ScoresRacesRoute: typeof ScoresRacesRoute
  ScoresUniquesRoute: typeof ScoresUniquesRoute
}

const ScoresRouteRouteChildren: ScoresRouteRouteChildren = {
  ScoresBountiesRoute: ScoresBountiesRoute,
  ScoresCollectionsRoute: ScoresCollectionsRoute,
  ScoresDailiesRoute: ScoresDailiesRoute,
  ScoresDelveRoute: ScoresDelveRoute,
  ScoresForYouRoute: ScoresForYouRoute,
  ScoresGemsRoute: ScoresGemsRoute,
  ScoresHeistRoute: ScoresHeistRoute,
  ScoresLadderRoute: ScoresLadderRoute,
  ScoresProgressRoute: ScoresProgressRoute,
  ScoresRacesRoute: ScoresRacesRoute,
  ScoresUniquesRoute: ScoresUniquesRoute,
}

const ScoresRouteRouteWithChildren = ScoresRouteRoute._addFileChildren(
  ScoresRouteRouteChildren,
)

interface StreamsRouteRouteChildren {
  StreamsTwitchAccountRoute: typeof StreamsTwitchAccountRoute
}

const StreamsRouteRouteChildren: StreamsRouteRouteChildren = {
  StreamsTwitchAccountRoute: StreamsTwitchAccountRoute,
}

const StreamsRouteRouteWithChildren = StreamsRouteRoute._addFileChildren(
  StreamsRouteRouteChildren,
)

interface AdminGuildStashesRouteRouteChildren {
  AdminGuildStashesStashIdRoute: typeof AdminGuildStashesStashIdRoute
}

const AdminGuildStashesRouteRouteChildren: AdminGuildStashesRouteRouteChildren =
  {
    AdminGuildStashesStashIdRoute: AdminGuildStashesStashIdRoute,
  }

const AdminGuildStashesRouteRouteWithChildren =
  AdminGuildStashesRouteRoute._addFileChildren(
    AdminGuildStashesRouteRouteChildren,
  )

interface ProfileUserIdRouteRouteChildren {
  ProfileUserIdEventIdCharacterIdRoute: typeof ProfileUserIdEventIdCharacterIdRoute
}

const ProfileUserIdRouteRouteChildren: ProfileUserIdRouteRouteChildren = {
  ProfileUserIdEventIdCharacterIdRoute: ProfileUserIdEventIdCharacterIdRoute,
}

const ProfileUserIdRouteRouteWithChildren =
  ProfileUserIdRouteRoute._addFileChildren(ProfileUserIdRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ScoresRouteRoute: ScoresRouteRouteWithChildren,
  StreamsRouteRoute: StreamsRouteRouteWithChildren,
  PlayedRoute: PlayedRoute,
  RulesRoute: RulesRoute,
  SettingsRoute: SettingsRoute,
  SubmissionsRoute: SubmissionsRoute,
  AdminGuildStashesRouteRoute: AdminGuildStashesRouteRouteWithChildren,
  ProfileUserIdRouteRoute: ProfileUserIdRouteRouteWithChildren,
  AdminRecurringJobsRoute: AdminRecurringJobsRoute,
  AdminSubmissionsRoute: AdminSubmissionsRoute,
  AdminTeamSortRoute: AdminTeamSortRoute,
  AdminTeamSuggestionsRoute: AdminTeamSuggestionsRoute,
  AdminUserManagementRoute: AdminUserManagementRoute,
  AdminIndexRoute: AdminIndexRoute,
  AuthDiscordCallbackRoute: AuthDiscordCallbackRoute,
  AuthPoeCallbackRoute: AuthPoeCallbackRoute,
  AuthTwitchCallbackRoute: AuthTwitchCallbackRoute,
  AdminEventsIndexRoute: AdminEventsIndexRoute,
  AdminEventsEventIdScoringPresetsRoute: AdminEventsEventIdScoringPresetsRoute,
  AdminEventsEventIdTeamsRoute: AdminEventsEventIdTeamsRoute,
  AdminEventsEventIdCategoriesCategoryIdRoute:
    AdminEventsEventIdCategoriesCategoryIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
